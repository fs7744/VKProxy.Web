Routes: Routes
document: Document
setting: Setting
Clusters: Clusters
Listen: Listen
intro1: support HTTP/1.1縲？TTP/2縲？TTP/3縲『ebsocket縲《ocks5
intro2: highly customizable, allowing developers to tailor the proxy to their specific needs with minimal effort
intro3: provides a rich set of extensibility points, enabling developers to add custom logic and features as needed, using familiar C# code
key: Name
protocols: Protocols
address: Address
edit: Edit
delete: Delete
operations: Operations
sni: Sni
new: New
closeLoss: Closing may result in loss of unsaved changes. Are you sure you want to close?
removeLoss: Are you sure you want to remove
inputPrefix: Please input prefix
required: Required, please input
requiredLength: Length should be more than 
create: Create
update: Update
bothL47: L4 / L7 protocols cannot coexist
Ip: Ip
Port: Port
wrongIp: Wrong ip format
wrongPort: Port must be between 1 and 65535
wrongSave: There is some error, can't save. Please check!
alreadyExists: Already exists the same value
Destinations: Destinations
Host: Host
Path: Path /xxx
QueryString: QueryString ?xx=xx
wrongFormat: Wrong format
wrongprotocol: Wrong protocol format
wronghost: Wrong host format
wrongport: Wrong port format
wrongpathname: Wrong path format
wrongsearch: Wrong query string format
LoadBalancingPolicy: Load Balancing
HealthCheck: Health Check
None: None
Passive: Passive
Active: Active
Policy: Policy
SecondSuffix: S
FailureRateLimit: FailureRateLimit
MinimalTotalCountThreshold: MinimalTotalCountThreshold
DetectionWindowSize: DetectionWindowSize
ReactivationPeriod: ReactivationPeriod
FailureRateLimitTip:  default failure rate limit for a destination to be marked as unhealthy that is applied if it's not set on a cluster's metadata. The value is in range (0,1). Default is 0.3 (30%).
MinimalTotalCountThresholdTip: minimal total number of requests which must be proxied to a destination within the detection window before this policy starts evaluating the destination's health and enforcing the failure rate limit. Default is 10.
DetectionWindowSizeTip: period of time while detected failures are kept and taken into account in the rate calculation. Default is 60
ReactivationPeriodTip: period after which an unhealthy destination's passive health state is reset to Unknown and it starts receiving traffic again
Interval: Interval
IntervalTip: Period of sending health probing requests. Default is 60
Timeout: Timeout
TimeoutTip: Probing request timeout. Default is 10
PolicyTip: Name of a policy evaluating destinations' active health states. Support tcp connect / http
PathTip: Health check path on all cluster's destinations. 
QueryStringTip: Health check query on all cluster's destinations. 
Fails: Fails
FailsTip: minimal total number of Fails. Default is 1
PassesTip: minimal total number of Passes. Default is 1
Passes: Passes
HttpClientConfig: HttpClient
IngoreCertificate: IngoreCertificate
IngoreCertificateTip: Indicates whether the server's SSL certificate validity is checked by the client. Setting it to true completely disables validation. Default value is false.
MaxConnections: MaxConnections
MaxConnectionsTip: Limits the number of connections used when communicating with the destination server.
AllowAutoRedirect: AllowAutoRedirect
AllowAutoRedirectTip: Automatically follow redirect responses
MultipleHttp2: MultipleHttp2Connections
MultipleHttp2Tip: Enables opening additional HTTP/2 connections to the same server when the maximum number of concurrent streams is reached on all existing connections. The default is true.
MultipleHttp3: MultipleHttp3Connections
MultipleHttp3Tip: Enables opening additional HTTP/3 connections to the same server when the maximum number of concurrent streams is reached on all existing connections. The default is true.
SslProtocols: SslProtocols
SslProtocolsTip: SSL protocols enabled
Enable: Enable
WebProxy: HTTPProxy
BypassOnLocal: BypassOnLocal
BypassOnLocalTip: A bool indicating if requests to local addresses should bypass the outbound proxy.
UseDefaultCredentials: UseDefaultCredentials
UseDefaultCredentialsTip: A bool indicating if the current application credentials should be use to authenticate to the outbound proxy. ASP.NET Core does not impersonate authenticated users for outbound requests.
AllowResponseBuffering: AllowResponseBuffering
AllowResponseBufferingTip: Allows to use write buffering when sending a response back to the client, if the server hosting supports it. NOTE enabling it can break SSE (server side event) scenarios.
ActivityTimeout: ActivityTimeout
ActivityTimeoutTip: How long a request is allowed to remain idle between any operation completing, after which it will be canceled. The default is 100 seconds. The timeout will reset when response headers are received or after successfully reading or writing any request, response, or streaming data like gRPC or WebSockets. TCP keep-alives and HTTP/2 protocol pings will not reset the timeout, but WebSocket pings will.
Version: Version
VersionTip: Outgoing request version. The supported values at the moment are 1.0, 1.1, 2 and 3. Default value is 2.
VersionPolicy: VersionPolicy
VersionPolicyTip: Defines how the final version is selected for the outgoing requests. Support RequestVersionOrLower/RequestVersionOrHigher/RequestVersionExact. The default value is RequestVersionOrLower.
HttpRequest: HttpRequest
Order: Order
OrderTip: Lower numbers have higher precedence
Passthrough: Passthrough
PassthroughTip: No check SSL certificate, check by backend. This only work on sni (TCP) proxy
HandshakeTimeout: HandshakeTimeout
checkCertificateRevocation: CheckRevocation
checkCertificateRevocationTip: specifies whether the certificate revocation list is checked during authentication.
ClientCertificateMode: CertificateRequirements
ClientCertificateModeTip: Client certificate requirements.
Certificate: Certificate
PEM: PEM
PEMTip: PEM format X.509 certificate file content
PEMKey: Key
PEMKeyTip: PEM format X.509 certificate key file content
Password: Password
PasswordTip: Password required to access the X.509 certificate data
UseSni: sni proxy
UseSniTip: Server Name Indication (SNI) can be used to host multiple domains on the same IP address and port. SNI can be used to conserve resources by serving multiple sites from one server.Only support tcp.
UseSniError: sni only support tcp.
RoutesTip: When a route is specified, the corresponding port will only serve this route.
SelectRoute: Select Route
NewRoute: New Route
SelectCluster: Select Cluster
NewCluster: New Cluster
SelectSni: Select Certificate
NewSni: New Certificate
Cancel: Cancel
Confirm: Confirm
UdpResponses: Responses for udp
UdpResponsesTip: Sets the number of datagrams expected from the proxied server in response to a client datagram if the UDP protocol is used.
ClustersTip: Configure the backend service load balancing strategy
Match: Match
Statement: Statement
StatementTip: Method = 'GET' OR Method = 'POST'
Paths: Paths
Methods: Methods
Metadata: Metadata
Transforms: Transforms
Key: Key
Value: Value
