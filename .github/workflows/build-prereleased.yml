# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  release:
    types: 
      - prereleased

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}-beta" >> $GITHUB_ENV 
    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x.x
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.4.0
      with:
        node-version: 22.15.x
    - name: Restore dependencies
      run: cd src/VKProxy.Admin/VKProxy.Admin.Server && dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: build ui
      run: cd src/VKProxy.Admin/vkproxy.admin.client && npm i npm-run-all --save-dev && npm install && npm run build
    - name: CP ui 
      run: cd src/VKProxy.Admin && cp -r vkproxy.admin.client/dist VKProxy.Admin.Server/bin/Release/net9.0/wwwroot && ls VKProxy.Admin.Server/bin/Release/net9.0/wwwroot
    - name: Docker Setup Docker
      uses: docker/setup-docker-action@v4.3.0
    - name: build img
      run: cd src/VKProxy.Admin && docker build -t vkproxy/ui:$RELEASE_VERSION .
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
      uses: docker/login-action@v3.4.0
      with:
        username: $DOCKER_N
        password: $DOCKER_P
    - name: push img
      run: docker push vkproxy/ui:$RELEASE_VERSION
          
          
